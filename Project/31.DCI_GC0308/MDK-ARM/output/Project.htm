<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Jun 22 12:13:02 2021
<BR><P>
<H3>Maximum Stack Usage =        856 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
DCI_IRQHandler &rArr; analyse_image_and_change_light &rArr; clothing_area_detecting_color &rArr; get_spectrum_index_of_image_3 &rArr; get_main_color_of_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC0_1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC0_1_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[39]">ADC2_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from gd32f20x_it.o(i.BusFault_Handler) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[20]">CAN0_EWMC_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[1e]">CAN0_RX0_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[1f]">CAN0_RX1_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[1d]">CAN0_TX_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[4c]">CAN1_EWMC_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[4a]">CAN1_RX0_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[4b]">CAN1_RX1_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[49]">CAN1_TX_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[54]">CAU_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[53]">DCI_IRQHandler</a> from main.o(i.DCI_IRQHandler) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[15]">DMA0_Channel0_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[16]">DMA0_Channel1_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[17]">DMA0_Channel2_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[18]">DMA0_Channel3_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[19]">DMA0_Channel4_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[1a]">DMA0_Channel5_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[1b]">DMA0_Channel6_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[42]">DMA1_Channel0_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[43]">DMA1_Channel1_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[44]">DMA1_Channel2_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[45]">DMA1_Channel3_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[46]">DMA1_Channel4_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[4e]">DMA1_Channel5_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[4f]">DMA1_Channel6_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from gd32f20x_it.o(i.DebugMon_Handler) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[47]">ENET_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[48]">ENET_WKUP_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[3a]">EXMC_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from gd32f20x_it.o(i.EXTI0_IRQHandler) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[32]">EXTI10_15_IRQHandler</a> from gd32f20x_it.o(i.EXTI10_15_IRQHandler) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[21]">EXTI5_9_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[e]">FMC_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[55]">HAU_TRNG_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from gd32f20x_it.o(i.HardFault_Handler) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[2a]">I2C0_ER_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[29]">I2C0_EV_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[2c]">I2C1_ER_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[2b]">I2C1_EV_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[52]">I2C2_ER_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[51]">I2C2_EV_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[b]">LVD_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from gd32f20x_it.o(i.MemManage_Handler) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from gd32f20x_it.o(i.NMI_Handler) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from gd32f20x_it.o(i.PendSV_Handler) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[f]">RCU_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[2d]">SPI0_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[2e]">SPI1_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[3d]">SPI2_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from gd32f20x_it.o(i.SVC_Handler) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from gd32f20x_it.o(i.SysTick_Handler) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[5b]">SystemInit</a> from system_gd32f20x.o(i.SystemInit) referenced from startup_gd32f20x_cl.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[22]">TIMER0_BRK_TIMER8_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[25]">TIMER0_Channel_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[24]">TIMER0_TRG_CMT_TIMER10_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[23]">TIMER0_UP_TIMER9_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[26]">TIMER1_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[27]">TIMER2_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[28]">TIMER3_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[3c]">TIMER4_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[40]">TIMER5_IRQHandler</a> from gd32f20x_it.o(i.TIMER5_IRQHandler) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[41]">TIMER6_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[35]">TIMER7_BRK_TIMER11_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[38]">TIMER7_Channel_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[37]">TIMER7_TRG_CMT_TIMER13_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[36]">TIMER7_UP_TIMER12_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[59]">TLI_ER_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[58]">TLI_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[3e]">UART3_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[3f]">UART4_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[56]">UART6_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[57]">UART7_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[2f]">USART0_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[30]">USART1_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[31]">USART2_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[50]">USART5_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[4d]">USBFS_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[34]">USBFS_WKUP_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from gd32f20x_it.o(i.UsageFault_Handler) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[a]">WWDGT_IRQHandler</a> from startup_gd32f20x_cl.o(.text) referenced from startup_gd32f20x_cl.o(RESET)
 <LI><a href="#[5c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32f20x_cl.o(.text)
 <LI><a href="#[5a]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(.text)
</UL>
<P><STRONG><a name="[113]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[5d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[77]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[114]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[115]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[116]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[117]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[118]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN0_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN0_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN0_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN0_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN1_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>CAU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA0_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA0_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA0_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA0_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA0_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA0_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA0_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ENET_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>EXMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI5_9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>HAU_TRNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIMER0_BRK_TIMER8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIMER0_TRG_CMT_TIMER10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIMER0_UP_TIMER9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIMER6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIMER7_BRK_TIMER11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIMER7_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIMER7_TRG_CMT_TIMER13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIMER7_UP_TIMER12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TLI_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>TLI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>UART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>USART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>USBFS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBFS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f20x_cl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[119]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_config
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_waiting_to_be_stable
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_none
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_existing
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_vectors_similar
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_spectrum_index_of_image_3
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_finding_ref
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_detecting_color
</UL>

<P><STRONG><a name="[11a]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[11b]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[c4]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_spectrum_index_of_image_3
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_main_color_of_image
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_stable
</UL>

<P><STRONG><a name="[11d]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_pwm_slowly
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_9_block_feature_vectors_of_image
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_array_and_indexes
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_vectors_similar
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_2d_vectors_similar
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[80]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_pwm_slowly
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_recipe_low
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_recipe_low_display
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_pwm_slowly
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_9_block_feature_vectors_of_image
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_vectors_similar
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_2d_vectors_similar
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_9_block_feature_vectors_of_image
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YUV422toRGB
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YUV422toRGB
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_spectrum_index_of_image_3
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_main_color_of_image
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YUV422toRGB
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBtoHSV100
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_9_block_feature_vectors_of_image
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBtoHSV100
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_pwm_slowly
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_array_and_indexes
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_9_block_feature_vectors_of_image
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_recipe_low
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_recipe_low_display
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_9_block_feature_vectors_of_image
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_spectrum_index_of_image_3
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_main_color_of_image
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YUV422toRGB
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBtoHSV100
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_pwm_slowly
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_recipe_low_display
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_array_and_indexes
</UL>

<P><STRONG><a name="[10d]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_recipe_low
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YUV422toRGB
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBtoHSV100
</UL>

<P><STRONG><a name="[e4]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_vectors_similar
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_2d_vectors_similar
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_9_block_feature_vectors_of_image
</UL>

<P><STRONG><a name="[11e]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_vectors_similar
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_2d_vectors_similar
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_main_color_of_image
</UL>

<P><STRONG><a name="[e8]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_vectors_similar
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_2d_vectors_similar
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_spectrum_index_of_image_3
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_vectors_similar
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_2d_vectors_similar
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_9_block_feature_vectors_of_image
</UL>

<P><STRONG><a name="[11f]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_pwm_slowly
</UL>

<P><STRONG><a name="[10e]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_array_and_indexes
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[120]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[75]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[121]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[122]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[123]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[63]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[6c]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[6b]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[124]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[125]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[126]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f20x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>COBLed_4000k</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, ledcontrol.o(i.COBLed_4000k))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = COBLed_4000k &rArr; switch_pwm_slowly &rArr; pwm_timer_config
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_pwm_slowly
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_recipe
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_machine_ledcontrol
</UL>

<P><STRONG><a name="[7b]"></a>COBLed_Test</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, ledcontrol.o(i.COBLed_Test))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = COBLed_Test &rArr; pwm_timer_config
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer_config
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_machine_ledcontrol
</UL>

<P><STRONG><a name="[7e]"></a>COBLed_minimum_cold_white</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, ledcontrol.o(i.COBLed_minimum_cold_white))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = COBLed_minimum_cold_white &rArr; switch_pwm_slowly &rArr; pwm_timer_config
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_pwm_slowly
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_machine_ledcontrol
</UL>

<P><STRONG><a name="[7f]"></a>COBLed_recipe_low_display</STRONG> (Thumb, 316 bytes, Stack size 72 bytes, ledcontrol.o(i.COBLed_recipe_low_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = COBLed_recipe_low_display &rArr; switch_pwm_slowly &rArr; pwm_timer_config
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_pwm_slowly
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_recipe_low
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_machine_ledcontrol
</UL>

<P><STRONG><a name="[83]"></a>COBLed_recipe_normal_display</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, ledcontrol.o(i.COBLed_recipe_normal_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = COBLed_recipe_normal_display &rArr; switch_pwm_slowly &rArr; pwm_timer_config
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_pwm_slowly
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_recipe
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_machine_ledcontrol
</UL>

<P><STRONG><a name="[84]"></a>COBLed_reserve_white</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, ledcontrol.o(i.COBLed_reserve_white))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = COBLed_reserve_white &rArr; switch_pwm_slowly &rArr; pwm_timer_config
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_pwm_slowly
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_6_recipe
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_machine_ledcontrol
</UL>

<P><STRONG><a name="[86]"></a>COBledPwmInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(i.COBledPwmInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = COBledPwmInit &rArr; pwm_timer_init &rArr; pwm_timer4_config &rArr; timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer_init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>DCI_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, main.o(i.DCI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = DCI_IRQHandler &rArr; analyse_image_and_change_light &rArr; clothing_area_detecting_color &rArr; get_spectrum_index_of_image_3 &rArr; get_main_color_of_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_yuv422_image
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_interrupt_flag_get
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_interrupt_flag_clear
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_write
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_image_and_change_light
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>DCMI_0V7670_RST_PWDN_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, dci_ov2640.o(i.DCMI_0V7670_RST_PWDN_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DCMI_0V7670_RST_PWDN_Init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_ov2640_init
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f20x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f20x_it.o(i.EXTI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI10_15_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, gd32f20x_it.o(i.EXTI10_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI10_15_IRQHandler &rArr; image_save &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tli_layer_disable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_get
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_disable
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tli_reload_config
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tli_enable
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_save
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_display
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>Gui_DrawFont_GBK24</STRONG> (Thumb, 552 bytes, Stack size 40 bytes, gui.o(i.Gui_DrawFont_GBK24))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Gui_DrawFont_GBK24 &rArr; Gui_DrawPoint &rArr; Lcd_SetXY &rArr; Lcd_WriteData16Bit &rArr; Lcd_WriteData &rArr; SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>Gui_DrawPoint</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_driver.o(i.Gui_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Gui_DrawPoint &rArr; Lcd_SetXY &rArr; Lcd_WriteData16Bit &rArr; Lcd_WriteData &rArr; SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetXY
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawFont_GBK24
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f20x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>LCD_ShowPicture</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, gui.o(i.LCD_ShowPicture))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_ShowPicture &rArr; Lcd_SetRegion &rArr; Lcd_WriteData16Bit &rArr; Lcd_WriteData &rArr; SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_yuv422_image
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_main_color_of_image
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
</UL>

<P><STRONG><a name="[a3]"></a>Lcd_Clear</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lcd_driver.o(i.Lcd_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Lcd_Clear &rArr; Lcd_SetRegion &rArr; Lcd_WriteData16Bit &rArr; Lcd_WriteData &rArr; SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteByte
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>Lcd_Init</STRONG> (Thumb, 516 bytes, Stack size 8 bytes, lcd_driver.o(i.Lcd_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Lcd_Init &rArr; SPI2_Init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteIndex
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>Lcd_Reset</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd_driver.o(i.Lcd_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lcd_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Init
</UL>

<P><STRONG><a name="[a2]"></a>Lcd_SetRegion</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, lcd_driver.o(i.Lcd_SetRegion))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Lcd_SetRegion &rArr; Lcd_WriteData16Bit &rArr; Lcd_WriteData &rArr; SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteIndex
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData16Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clear
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPicture
</UL>

<P><STRONG><a name="[9f]"></a>Lcd_SetXY</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lcd_driver.o(i.Lcd_SetXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Lcd_SetXY &rArr; Lcd_WriteData16Bit &rArr; Lcd_WriteData &rArr; SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteIndex
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData16Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawPoint
</UL>

<P><STRONG><a name="[a0]"></a>Lcd_WriteData</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd_driver.o(i.Lcd_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lcd_WriteData &rArr; SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPicture
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData16Bit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawPoint
</UL>

<P><STRONG><a name="[a9]"></a>Lcd_WriteData16Bit</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lcd_driver.o(i.Lcd_WriteData16Bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Lcd_WriteData16Bit &rArr; Lcd_WriteData &rArr; SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetXY
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetRegion
</UL>

<P><STRONG><a name="[a8]"></a>Lcd_WriteIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd_driver.o(i.Lcd_WriteIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lcd_WriteIndex &rArr; SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetXY
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetRegion
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f20x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f20x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f20x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>RGBtoHSV100</STRONG> (Thumb, 366 bytes, Stack size 88 bytes, coloranalysis.o(i.RGBtoHSV100))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = RGBtoHSV100 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_main_color_of_image
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_9_block_feature_vectors_of_image
</UL>

<P><STRONG><a name="[a6]"></a>SPI2_Init</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, lcd_driver.o(i.SPI2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SPI2_Init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_remap_config
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Init
</UL>

<P><STRONG><a name="[a4]"></a>SPI_WriteByte</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lcd_driver.o(i.SPI_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_flag_get
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_transmit
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clear
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteIndex
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f20x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gd32f20x_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>SystemInit</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, system_gd32f20x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; system_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>TIMER5_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gd32f20x_it.o(i.TIMER5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f20x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f20x_cl.o(RESET)
</UL>
<P><STRONG><a name="[b5]"></a>YUV422toRGB</STRONG> (Thumb, 278 bytes, Stack size 88 bytes, coloranalysis.o(i.YUV422toRGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_yuv422_image
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_main_color_of_image
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_9_block_feature_vectors_of_image
</UL>

<P><STRONG><a name="[127]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[128]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[129]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[8c]"></a>analyse_image_and_change_light</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, coloranalysis.o(i.analyse_image_and_change_light))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = analyse_image_and_change_light &rArr; clothing_area_detecting_color &rArr; get_spectrum_index_of_image_3 &rArr; get_main_color_of_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_waiting_to_be_stable
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_none
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_existing
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_stable
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_finding_ref
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_detecting_color
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCI_IRQHandler
</UL>

<P><STRONG><a name="[be]"></a>ckout0_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dci_ov2640.o(i.ckout0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ckout0_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_ckout0_config
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_ov2640_init
</UL>

<P><STRONG><a name="[b7]"></a>clothing_area_detecting_color</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, coloranalysis.o(i.clothing_area_detecting_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = clothing_area_detecting_color &rArr; get_spectrum_index_of_image_3 &rArr; get_main_color_of_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_vectors_similar
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_spectrum_index_of_image_3
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_image_and_change_light
</UL>

<P><STRONG><a name="[b8]"></a>clothing_area_finding_ref</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, coloranalysis.o(i.clothing_area_finding_ref))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = clothing_area_finding_ref &rArr; get_feature_vector_of_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_vectors_similar
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_image_and_change_light
</UL>

<P><STRONG><a name="[b6]"></a>clothing_area_init</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, coloranalysis.o(i.clothing_area_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = clothing_area_init &rArr; get_feature_vector_of_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_vectors_similar
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_image_and_change_light
</UL>

<P><STRONG><a name="[bd]"></a>clothing_area_stable</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, coloranalysis.o(i.clothing_area_stable))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = clothing_area_stable &rArr; get_feature_vector_of_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_vectors_similar
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_image_and_change_light
</UL>

<P><STRONG><a name="[c5]"></a>dci_byte_read</STRONG> (Thumb, 382 bytes, Stack size 16 bytes, sccb.o(i.dci_byte_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = dci_byte_read &rArr; i2c_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop_on_bus
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start_on_bus
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_addressing
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_clear
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_transmit
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_receive
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ack_config
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_ov2640_id_read
</UL>

<P><STRONG><a name="[8a]"></a>dci_byte_write</STRONG> (Thumb, 250 bytes, Stack size 16 bytes, sccb.o(i.dci_byte_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = dci_byte_write &rArr; i2c_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop_on_bus
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start_on_bus
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_addressing
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_clear
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_transmit
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ack_config
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCI_IRQHandler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GC0308InitialSetting
</UL>

<P><STRONG><a name="[f3]"></a>dci_capture_disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32f20x_dci.o(i.dci_capture_disable))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_save
</UL>

<P><STRONG><a name="[f9]"></a>dci_capture_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32f20x_dci.o(i.dci_capture_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ce]"></a>dci_config</STRONG> (Thumb, 238 bytes, Stack size 80 bytes, dci_ov2640.o(i.dci_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = dci_config &rArr; dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_enable
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_remap1_config
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_ov2640_init
</UL>

<P><STRONG><a name="[f8]"></a>dci_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32f20x_dci.o(i.dci_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d0]"></a>dci_init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, gd32f20x_dci.o(i.dci_init))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_config
</UL>

<P><STRONG><a name="[f7]"></a>dci_interrupt_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f20x_dci.o(i.dci_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>dci_interrupt_flag_clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f20x_dci.o(i.dci_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCI_IRQHandler
</UL>

<P><STRONG><a name="[89]"></a>dci_interrupt_flag_get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f20x_dci.o(i.dci_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCI_IRQHandler
</UL>

<P><STRONG><a name="[d4]"></a>dci_ov2640_id_read</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, dci_ov2640.o(i.dci_ov2640_id_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = dci_ov2640_id_read &rArr; dci_byte_read &rArr; i2c_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_read
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d5]"></a>dci_ov2640_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dci_ov2640.o(i.dci_ov2640_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = dci_ov2640_init &rArr; sccb_config &rArr; i2c_clock_config &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sccb_config
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_config
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ckout0_init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_0V7670_RST_PWDN_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GC0308InitialSetting
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>delay_1ms</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, systick.o(i.delay_1ms))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer_init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_pwm_slowly
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_Test
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Reset
</UL>

<P><STRONG><a name="[b1]"></a>delay_decrement</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, systick.o(i.delay_decrement))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[f2]"></a>dma_channel_disable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gd32f20x_dma.o(i.dma_channel_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_save
</UL>

<P><STRONG><a name="[8e]"></a>dma_channel_enable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gd32f20x_dma.o(i.dma_channel_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCI_IRQHandler
</UL>

<P><STRONG><a name="[d3]"></a>dma_circulation_enable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gd32f20x_dma.o(i.dma_circulation_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_circulation_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_config
</UL>

<P><STRONG><a name="[d1]"></a>dma_deinit</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, gd32f20x_dma.o(i.dma_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_config
</UL>

<P><STRONG><a name="[d2]"></a>dma_init</STRONG> (Thumb, 290 bytes, Stack size 28 bytes, gd32f20x_dma.o(i.dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = dma_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_config
</UL>

<P><STRONG><a name="[9b]"></a>exti_interrupt_disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f20x_exti.o(i.exti_interrupt_disable))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_15_IRQHandler
</UL>

<P><STRONG><a name="[95]"></a>exti_interrupt_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gd32f20x_exti.o(i.exti_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_15_IRQHandler
</UL>

<P><STRONG><a name="[94]"></a>exti_interrupt_flag_get</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32f20x_exti.o(i.exti_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_15_IRQHandler
</UL>

<P><STRONG><a name="[d7]"></a>gd_eval_com_init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, gd32f207i_eval.o(i.gd_eval_com_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = gd_eval_com_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dd]"></a>gd_eval_led_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gd32f207i_eval.o(i.gd_eval_led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gd_eval_led_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fd]"></a>gd_eval_led_off</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f207i_eval.o(i.gd_eval_led_off))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fc]"></a>gd_eval_led_on</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f207i_eval.o(i.gd_eval_led_on))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[de]"></a>get_2_base_color_spectrum_index</STRONG> (Thumb, 130 bytes, Stack size 4 bytes, coloranalysis.o(i.get_2_base_color_spectrum_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = get_2_base_color_spectrum_index
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_color_warm
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_color_neutral
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_color_cold
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_spectrum_index_of_image_3
</UL>

<P><STRONG><a name="[e2]"></a>get_9_block_feature_vectors_of_image</STRONG> (Thumb, 934 bytes, Stack size 168 bytes, coloranalysis.o(i.get_9_block_feature_vectors_of_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = get_9_block_feature_vectors_of_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_bad_spot_yuv
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YUV422toRGB
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBtoHSV100
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_waiting_to_be_stable
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_none
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_existing
</UL>

<P><STRONG><a name="[c0]"></a>get_feature_vector_of_image</STRONG> (Thumb, 1224 bytes, Stack size 304 bytes, coloranalysis.o(i.get_feature_vector_of_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = get_feature_vector_of_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_bad_spot_yuv
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YUV422toRGB
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBtoHSV100
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPicture
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_stable
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_finding_ref
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_detecting_color
</UL>

<P><STRONG><a name="[e5]"></a>get_main_color_of_image</STRONG> (Thumb, 2520 bytes, Stack size 384 bytes, coloranalysis.o(i.get_main_color_of_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = get_main_color_of_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_array_and_indexes_int
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_bad_spot_yuv
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YUV422toRGB
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGBtoHSV100
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPicture
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_spectrum_index_of_image_3
</UL>

<P><STRONG><a name="[c2]"></a>get_spectrum_index_of_image_3</STRONG> (Thumb, 640 bytes, Stack size 248 bytes, coloranalysis.o(i.get_spectrum_index_of_image_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = get_spectrum_index_of_image_3 &rArr; get_main_color_of_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_color_warm
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_color_neutral
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_color_cold
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_main_color_of_image
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_2_base_color_spectrum_index
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_detecting_color
</UL>

<P><STRONG><a name="[92]"></a>gpio_bit_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f20x_gpio.o(i.gpio_bit_reset))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_gpio_config
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_0V7670_RST_PWDN_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteIndex
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Reset
</UL>

<P><STRONG><a name="[93]"></a>gpio_bit_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f20x_gpio.o(i.gpio_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clear
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_0V7670_RST_PWDN_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_WriteData
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Reset
</UL>

<P><STRONG><a name="[91]"></a>gpio_init</STRONG> (Thumb, 148 bytes, Stack size 20 bytes, gd32f20x_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_gpio_config
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_eval_led_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_eval_com_init
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sccb_config
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_config
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ckout0_init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_0V7670_RST_PWDN_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[cf]"></a>gpio_pin_remap1_config</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, gd32f20x_gpio.o(i.gpio_pin_remap1_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_pin_remap1_config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_gpio_config
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_config
</UL>

<P><STRONG><a name="[ab]"></a>gpio_pin_remap_config</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, gd32f20x_gpio.o(i.gpio_pin_remap_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_pin_remap_config
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[cc]"></a>i2c_ack_config</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32f20x_i2c.o(i.i2c_ack_config))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_write
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sccb_config
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_read
</UL>

<P><STRONG><a name="[e9]"></a>i2c_clock_config</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, gd32f20x_i2c.o(i.i2c_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = i2c_clock_config &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sccb_config
</UL>

<P><STRONG><a name="[cd]"></a>i2c_data_receive</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f20x_i2c.o(i.i2c_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_read
</UL>

<P><STRONG><a name="[ca]"></a>i2c_data_transmit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f20x_i2c.o(i.i2c_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_write
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_read
</UL>

<P><STRONG><a name="[eb]"></a>i2c_deinit</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, gd32f20x_i2c.o(i.i2c_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sccb_config
</UL>

<P><STRONG><a name="[10c]"></a>i2c_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f20x_i2c.o(i.i2c_enable))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sccb_config
</UL>

<P><STRONG><a name="[c9]"></a>i2c_flag_clear</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f20x_i2c.o(i.i2c_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_write
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_read
</UL>

<P><STRONG><a name="[c7]"></a>i2c_flag_get</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, gd32f20x_i2c.o(i.i2c_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2c_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_write
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_read
</UL>

<P><STRONG><a name="[c8]"></a>i2c_master_addressing</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32f20x_i2c.o(i.i2c_master_addressing))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_write
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_read
</UL>

<P><STRONG><a name="[10b]"></a>i2c_mode_addr_config</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, gd32f20x_i2c.o(i.i2c_mode_addr_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2c_mode_addr_config
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sccb_config
</UL>

<P><STRONG><a name="[c6]"></a>i2c_start_on_bus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f20x_i2c.o(i.i2c_start_on_bus))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_write
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_read
</UL>

<P><STRONG><a name="[cb]"></a>i2c_stop_on_bus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f20x_i2c.o(i.i2c_stop_on_bus))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_write
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_read
</UL>

<P><STRONG><a name="[ee]"></a>if_2d_vectors_similar</STRONG> (Thumb, 330 bytes, Stack size 104 bytes, coloranalysis.o(i.if_2d_vectors_similar))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = if_2d_vectors_similar &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_array_and_indexes
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_waiting_to_be_stable
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_none
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedestrian_area_existing
</UL>

<P><STRONG><a name="[e0]"></a>if_color_cold</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, coloranalysis.o(i.if_color_cold))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_spectrum_index_of_image_3
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_2_base_color_spectrum_index
</UL>

<P><STRONG><a name="[e1]"></a>if_color_neutral</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, coloranalysis.o(i.if_color_neutral))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_spectrum_index_of_image_3
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_2_base_color_spectrum_index
</UL>

<P><STRONG><a name="[df]"></a>if_color_warm</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, coloranalysis.o(i.if_color_warm))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_spectrum_index_of_image_3
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_2_base_color_spectrum_index
</UL>

<P><STRONG><a name="[c1]"></a>if_vectors_similar</STRONG> (Thumb, 400 bytes, Stack size 128 bytes, coloranalysis.o(i.if_vectors_similar))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = if_vectors_similar &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sort_array_and_indexes
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_stable
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_finding_ref
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clothing_area_detecting_color
</UL>

<P><STRONG><a name="[9a]"></a>image_display</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, main.o(i.image_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = image_display
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tli_reload_config
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tli_layer_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tli_layer_enable
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tli_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_15_IRQHandler
</UL>

<P><STRONG><a name="[99]"></a>image_save</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, main.o(i.image_save))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = image_save &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_capture_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_15_IRQHandler
</UL>

<P><STRONG><a name="[e3]"></a>is_bad_spot_yuv</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, coloranalysis.o(i.is_bad_spot_yuv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = is_bad_spot_yuv
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_main_color_of_image
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_feature_vector_of_image
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_9_block_feature_vectors_of_image
</UL>

<P><STRONG><a name="[5a]"></a>main</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = main &rArr; state_machine_ledcontrol &rArr; COBLed_recipe_low_display &rArr; switch_pwm_slowly &rArr; pwm_timer_config
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer5_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_machine_ledcontrol
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_camera_exception
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_eval_led_on
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_eval_led_off
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_eval_led_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_eval_com_init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_ov2640_init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_ov2640_id_read
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_interrupt_enable
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_enable
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_capture_enable
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_write
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clear
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_DrawFont_GBK24
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBledPwmInit
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[ff]"></a>nvic_irq_enable</STRONG> (Thumb, 134 bytes, Stack size 20 bytes, gd32f20x_misc.o(i.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_config
</UL>

<P><STRONG><a name="[fe]"></a>nvic_priority_group_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f20x_misc.o(i.nvic_priority_group_set))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_config
</UL>

<P><STRONG><a name="[bb]"></a>pedestrian_area_existing</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, coloranalysis.o(i.pedestrian_area_existing))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = pedestrian_area_existing &rArr; get_9_block_feature_vectors_of_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_2d_vectors_similar
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_9_block_feature_vectors_of_image
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_image_and_change_light
</UL>

<P><STRONG><a name="[b9]"></a>pedestrian_area_init</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, coloranalysis.o(i.pedestrian_area_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = pedestrian_area_init &rArr; get_9_block_feature_vectors_of_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_2d_vectors_similar
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_9_block_feature_vectors_of_image
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_image_and_change_light
</UL>

<P><STRONG><a name="[ba]"></a>pedestrian_area_none</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, coloranalysis.o(i.pedestrian_area_none))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = pedestrian_area_none &rArr; get_9_block_feature_vectors_of_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_2d_vectors_similar
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_9_block_feature_vectors_of_image
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_image_and_change_light
</UL>

<P><STRONG><a name="[bc]"></a>pedestrian_area_waiting_to_be_stable</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, coloranalysis.o(i.pedestrian_area_waiting_to_be_stable))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = pedestrian_area_waiting_to_be_stable &rArr; get_9_block_feature_vectors_of_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_2d_vectors_similar
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_9_block_feature_vectors_of_image
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_image_and_change_light
</UL>

<P><STRONG><a name="[fa]"></a>process_camera_exception</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ledcontrol.o(i.process_camera_exception))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>pwm_gpio_config</STRONG> (Thumb, 198 bytes, Stack size 8 bytes, timer.o(i.pwm_gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = pwm_gpio_config &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_remap1_config
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBledPwmInit
</UL>

<P><STRONG><a name="[100]"></a>pwm_timer1_config</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, timer.o(i.pwm_timer1_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pwm_timer1_config &rArr; timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_shadow_config
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_pulse_value_config
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_mode_config
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_config
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_auto_reload_shadow_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer_init
</UL>

<P><STRONG><a name="[109]"></a>pwm_timer2_config</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, timer.o(i.pwm_timer2_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pwm_timer2_config &rArr; timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_shadow_config
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_pulse_value_config
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_mode_config
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_config
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_auto_reload_shadow_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer_init
</UL>

<P><STRONG><a name="[10a]"></a>pwm_timer4_config</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, timer.o(i.pwm_timer4_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pwm_timer4_config &rArr; timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_shadow_config
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_pulse_value_config
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_mode_config
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_config
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_auto_reload_shadow_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer_init
</UL>

<P><STRONG><a name="[7c]"></a>pwm_timer_config</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, timer.o(i.pwm_timer_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pwm_timer_config
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_pulse_value_config
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_pwm_slowly
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_Test
</UL>

<P><STRONG><a name="[88]"></a>pwm_timer_init</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, timer.o(i.pwm_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pwm_timer_init &rArr; pwm_timer4_config &rArr; timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_pulse_value_config
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer4_config
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer2_config
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer1_config
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBledPwmInit
</UL>

<P><STRONG><a name="[bf]"></a>rcu_ckout0_config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gd32f20x_rcu.o(i.rcu_ckout0_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rcu_ckout0_config
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ckout0_init
</UL>

<P><STRONG><a name="[ea]"></a>rcu_clock_freq_get</STRONG> (Thumb, 336 bytes, Stack size 92 bytes, gd32f20x_rcu.o(i.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_clock_config
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>

<P><STRONG><a name="[90]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f20x_rcu.o(i.rcu_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer5_init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_gpio_config
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_eval_led_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_eval_com_init
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sccb_config
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_config
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ckout0_init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_0V7670_RST_PWDN_Init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer4_config
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer2_config
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer1_config
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[ed]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f20x_rcu.o(i.rcu_periph_reset_disable))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_deinit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
</UL>

<P><STRONG><a name="[ec]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f20x_rcu.o(i.rcu_periph_reset_enable))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_deinit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
</UL>

<P><STRONG><a name="[d6]"></a>sccb_config</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, sccb.o(i.sccb_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = sccb_config &rArr; i2c_clock_config &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_mode_addr_config
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_enable
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_deinit
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_clock_config
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_ack_config
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_ov2640_init
</UL>

<P><STRONG><a name="[85]"></a>set_6_recipe</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ledcontrol.o(i.set_6_recipe))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = set_6_recipe
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_reserve_white
</UL>

<P><STRONG><a name="[7a]"></a>set_recipe</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, ledcontrol.o(i.set_recipe))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_recipe_normal_display
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_4000k
</UL>

<P><STRONG><a name="[82]"></a>set_recipe_low</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, ledcontrol.o(i.set_recipe_low))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = set_recipe_low &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_recipe_low_display
</UL>

<P><STRONG><a name="[8b]"></a>show_yuv422_image</STRONG> (Thumb, 160 bytes, Stack size 368 bytes, coloranalysis.o(i.show_yuv422_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = show_yuv422_image &rArr; YUV422toRGB &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YUV422toRGB
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCI_IRQHandler
</UL>

<P><STRONG><a name="[ef]"></a>sort_array_and_indexes</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, coloranalysis.o(i.sort_array_and_indexes))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = sort_array_and_indexes &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_vectors_similar
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;if_2d_vectors_similar
</UL>

<P><STRONG><a name="[e7]"></a>sort_array_and_indexes_int</STRONG> (Thumb, 138 bytes, Stack size 28 bytes, coloranalysis.o(i.sort_array_and_indexes_int))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = sort_array_and_indexes_int
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_main_color_of_image
</UL>

<P><STRONG><a name="[ad]"></a>spi_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f20x_spi.o(i.spi_enable))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[b0]"></a>spi_i2s_data_receive</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f20x_spi.o(i.spi_i2s_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteByte
</UL>

<P><STRONG><a name="[af]"></a>spi_i2s_data_transmit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f20x_spi.o(i.spi_i2s_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteByte
</UL>

<P><STRONG><a name="[ae]"></a>spi_i2s_flag_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f20x_spi.o(i.spi_i2s_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteByte
</UL>

<P><STRONG><a name="[ac]"></a>spi_init</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, gd32f20x_spi.o(i.spi_init))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[fb]"></a>state_machine_ledcontrol</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, ledcontrol.o(i.state_machine_ledcontrol))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = state_machine_ledcontrol &rArr; COBLed_recipe_low_display &rArr; switch_pwm_slowly &rArr; pwm_timer_config
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_reserve_white
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_recipe_normal_display
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_recipe_low_display
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_minimum_cold_white
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_Test
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_4000k
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>switch_pwm_slowly</STRONG> (Thumb, 522 bytes, Stack size 104 bytes, ledcontrol.o(i.switch_pwm_slowly))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = switch_pwm_slowly &rArr; pwm_timer_config
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer_config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_reserve_white
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_recipe_normal_display
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_recipe_low_display
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_minimum_cold_white
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COBLed_4000k
</UL>

<P><STRONG><a name="[f4]"></a>systick_config</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, systick.o(i.systick_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = systick_config &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f6]"></a>timer5_init</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, timer.o(i.timer5_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = timer5_init &rArr; timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[107]"></a>timer_auto_reload_shadow_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f20x_timer.o(i.timer_auto_reload_shadow_enable))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer4_config
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer2_config
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer1_config
</UL>

<P><STRONG><a name="[103]"></a>timer_channel_output_config</STRONG> (Thumb, 484 bytes, Stack size 8 bytes, gd32f20x_timer.o(i.timer_channel_output_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_channel_output_config
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer4_config
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer2_config
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer1_config
</UL>

<P><STRONG><a name="[105]"></a>timer_channel_output_mode_config</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, gd32f20x_timer.o(i.timer_channel_output_mode_config))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer4_config
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer2_config
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer1_config
</UL>

<P><STRONG><a name="[104]"></a>timer_channel_output_pulse_value_config</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gd32f20x_timer.o(i.timer_channel_output_pulse_value_config))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer_config
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer4_config
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer2_config
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer1_config
</UL>

<P><STRONG><a name="[106]"></a>timer_channel_output_shadow_config</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, gd32f20x_timer.o(i.timer_channel_output_shadow_config))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer4_config
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer2_config
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer1_config
</UL>

<P><STRONG><a name="[101]"></a>timer_deinit</STRONG> (Thumb, 374 bytes, Stack size 8 bytes, gd32f20x_timer.o(i.timer_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer5_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer4_config
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer2_config
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer1_config
</UL>

<P><STRONG><a name="[108]"></a>timer_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f20x_timer.o(i.timer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer5_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer4_config
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer2_config
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer1_config
</UL>

<P><STRONG><a name="[102]"></a>timer_init</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, gd32f20x_timer.o(i.timer_init))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer5_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer4_config
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer2_config
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer1_config
</UL>

<P><STRONG><a name="[112]"></a>timer_interrupt_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f20x_timer.o(i.timer_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer5_init
</UL>

<P><STRONG><a name="[b4]"></a>timer_interrupt_flag_clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f20x_timer.o(i.timer_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER5_IRQHandler
</UL>

<P><STRONG><a name="[b3]"></a>timer_interrupt_flag_get</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32f20x_timer.o(i.timer_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER5_IRQHandler
</UL>

<P><STRONG><a name="[98]"></a>tli_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32f20x_tli.o(i.tli_enable))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_15_IRQHandler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_display
</UL>

<P><STRONG><a name="[96]"></a>tli_layer_disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32f20x_tli.o(i.tli_layer_disable))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_15_IRQHandler
</UL>

<P><STRONG><a name="[f1]"></a>tli_layer_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32f20x_tli.o(i.tli_layer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_display
</UL>

<P><STRONG><a name="[f0]"></a>tli_layer_init</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, gd32f20x_tli.o(i.tli_layer_init))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_display
</UL>

<P><STRONG><a name="[97]"></a>tli_reload_config</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32f20x_tli.o(i.tli_reload_config))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_15_IRQHandler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_display
</UL>

<P><STRONG><a name="[d9]"></a>usart_baudrate_set</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, gd32f20x_usart.o(i.usart_baudrate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_eval_com_init
</UL>

<P><STRONG><a name="[d8]"></a>usart_deinit</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, gd32f20x_usart.o(i.usart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_eval_com_init
</UL>

<P><STRONG><a name="[dc]"></a>usart_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f20x_usart.o(i.usart_enable))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_eval_com_init
</UL>

<P><STRONG><a name="[da]"></a>usart_receive_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f20x_usart.o(i.usart_receive_config))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_eval_com_init
</UL>

<P><STRONG><a name="[db]"></a>usart_transmit_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f20x_usart.o(i.usart_transmit_config))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_eval_com_init
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[f5]"></a>nvic_config</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(i.nvic_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nvic_config &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[111]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, systick.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
</UL>

<P><STRONG><a name="[110]"></a>system_clock_120m_hxtal</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, system_gd32f20x.o(i.system_clock_120m_hxtal))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[b2]"></a>system_clock_config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_gd32f20x.o(i.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = system_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_120m_hxtal
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[9c]"></a>GC0308InitialSetting</STRONG> (Thumb, 1868 bytes, Stack size 8 bytes, dci_ov2640.o(i.GC0308InitialSetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GC0308InitialSetting &rArr; dci_byte_write &rArr; i2c_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_byte_write
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dci_ov2640_init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
